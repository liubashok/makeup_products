{"version":3,"file":"static/js/255.811da984.chunk.js","mappings":"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","sources":["pages/Products.tsx","hooks/useNavigateToHome.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchMakeupProducts, toggleFavorite, removeProduct, setMakeupProducts, setCurrentPage } from '../redux/makeupSlice';\nimport { RootState, AppDispatch } from '../redux/store';\nimport { useNavigate } from 'react-router-dom';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid2';\nimport IconButton from '@mui/material/IconButton';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport TextField from '@mui/material/TextField';\nimport useNavigateToHome from '../hooks/useNavigateToHome';\nimport Tooltip from '@mui/material/Tooltip';\n\nconst Products = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n  const products = useSelector((state: RootState) => state.makeup.products);\n  const loading = useSelector((state: RootState) => state.makeup.loading);\n  const favorites = useSelector((state: RootState) => state.makeup.favorites);\n  const error = useSelector((state: RootState) => state.makeup.error);\n  const currentPage = useSelector((state: RootState) => state.makeup.currentPage);\n  const productsPerPage = useSelector((state: RootState) => state.makeup.productsPerPage);\n\n  const [currentPageFavorites, setCurrentPageFavorites] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filter, setFilter] = useState<'all' | 'favorites'>('all');\n\n  const isLoaded = useSelector((state: RootState) => state.makeup.isLoaded);\n  useEffect(() => {\n    const storedProducts = localStorage.getItem('products');\n    if (storedProducts) {\n      dispatch(setMakeupProducts(JSON.parse(storedProducts)));\n    }\n    else if (!isLoaded) {\n      dispatch(fetchMakeupProducts());\n    }\n  }, [dispatch, isLoaded]);\n\n  const filteredProducts = products.filter(product => \n    product.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const favoriteProducts = filteredProducts.filter(product => favorites.includes(product.id));\n\n  const indexOfLastProductAll = currentPage * productsPerPage;\n  const indexOfFirstProductAll = indexOfLastProductAll - productsPerPage;\n  const currentProductsAll = filteredProducts.slice(indexOfFirstProductAll, indexOfLastProductAll);\n\n  const indexOfLastProductFav = currentPageFavorites * productsPerPage;\n  const indexOfFirstProductFav = indexOfLastProductFav - productsPerPage;\n  const currentProductsFavorites = favoriteProducts.slice(indexOfFirstProductFav, indexOfLastProductFav);\n\n  const paginateAll = (pageNumber: number) => {\n    dispatch(setCurrentPage(pageNumber));\n  };\n  \n  const paginateFavorites = (pageNumber: number) => {\n    setCurrentPageFavorites(pageNumber);\n  };\n\n  const handleToggleFavorite = (id: number) => {\n    dispatch(toggleFavorite(id));\n  };\n\n  const handleRemoveProduct = (id: number) => {\n    dispatch(removeProduct(id));\n  };\n\n  const handleViewDetails = (id: number) => {\n    navigate(`/products/${id}`);\n  };\n\n  const handleCreateProduct = (pageName: string) => {\n    navigate(pageName);\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value);\n    paginateAll(1);\n  };\n\n  const handleFilterChange = (newFilter: 'all' | 'favorites') => {\n    setFilter(newFilter);\n  };\n  const handleToHome = useNavigateToHome();\n\n  return (\n    <div>\n      <h1 onClick={handleToHome}\n      role=\"button\" \n      style={{ cursor: 'pointer', margin: '10px 15px' }}\n      >Makeup Products\n      </h1>\n      {loading && <CircularProgress />}\n      {/* {error && <p>{error}</p>} */}\n      {error && (\n      <>\n        {console.log(error)}\n        <p>{error}</p>\n      </>\n    )}\n\n      <TextField\n        label=\"Search Products\"\n        value={searchQuery}\n        onChange={handleSearchChange}\n        sx={{ margin: 'auto 15px' }}\n      />\n      <Button onClick={() => handleFilterChange('all')} variant={filter === 'all' ? 'contained' : 'outlined'} sx={{ m: 2 }}>\n        All Products\n      </Button>\n      <Button onClick={() => handleFilterChange('favorites')} variant={filter === 'favorites' ? 'contained' : 'outlined'}>\n        Favorite Products\n      </Button>\n\n      <Grid container spacing={3} sx={{ m: 2 }}>\n        {(filter === 'all' ? currentProductsAll : currentProductsFavorites).map((product) => (\n          <Grid size={{xs: 12, sm: 6, md: 2}} key={product.id}>\n            <Card\n              onClick={() => handleViewDetails(product.id)}\n              sx={{ cursor: 'pointer', maxWidth: 300, minHeight: '400px', maxHeight: '550px', display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}\n            >\n              <div style={{ width: '100%', height: '400px', overflow: 'hidden' }}>\n              <img src={product.image_link} alt={product.name} style={{ width: '100%', maxHeight: '400px', objectFit: 'cover' }}\n              onError={(e) => (e.currentTarget.src = `${process.env.PUBLIC_URL}/no-products-found.png`)} \n              />\n              </div>\n              <CardContent sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}>\n                <div>\n                  <Tooltip title={product.name} arrow>\n                <Typography\n                  variant=\"h6\"\n                  sx={{\n                    height: '50px',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap',\n                  }}\n                >\n                  {product.name}\n                </Typography>\n                </Tooltip>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  sx={{\n                    height: '40px',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap',\n                  }}\n                >\n                  {product.brand}\n                </Typography>\n                <Tooltip title={product.price} arrow>\n                <Typography variant=\"body1\"\n                sx={{\n                  height: '40px',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  whiteSpace: 'nowrap',\n                }}\n                >${product.price}\n                </Typography>\n                </Tooltip>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  sx={{\n                    height: '20px',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                  }}\n                >\n                  {product.product_type}\n                </Typography>\n                </div>\n                <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '10px' }}>\n                  <IconButton onClick={(event) => { event.stopPropagation(); handleToggleFavorite(product.id); }} color=\"primary\">\n                    {favorites.includes(product.id) ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n                  </IconButton>\n                  <IconButton onClick={(event) => { event.stopPropagation(); handleRemoveProduct(product.id); }} color=\"secondary\">\n                    <DeleteIcon />\n                  </IconButton>\n                </div>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n      {filter === 'all' ? (\n        <div style={{ margin: '0 15px'}}>\n          <Button onClick={() => paginateAll(currentPage - 1)} disabled={currentPage === 1}>\n            Previous\n          </Button>\n          <Button onClick={() => paginateAll(currentPage + 1)} disabled={currentPage === Math.ceil(filteredProducts.length / productsPerPage)}>\n            Next\n          </Button>\n        </div>\n      ) : (\n        <div style={{ margin: '0 15px'}}>\n          <Button onClick={() => paginateFavorites(currentPageFavorites - 1)} disabled={currentPageFavorites === 1}>\n            Previous\n          </Button>\n          <Button onClick={() => paginateFavorites(currentPageFavorites + 1)} disabled={currentPageFavorites === Math.ceil(favoriteProducts.length / productsPerPage)}>\n            Next\n          </Button>\n        </div>\n      )}\n       <div style={{ margin: '0 15px'}}>\n      <Button onClick={() => handleCreateProduct('/create-product')}>Create product</Button>\n    </div>\n    </div>\n  );\n};\n\nexport default Products;","import { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { setCurrentPage } from '../redux/makeupSlice';\n\nconst useNavigateToHome = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleToHome = () => {\n    dispatch(setCurrentPage(1));\n    navigate('/products');\n  };\n\n  return handleToHome;\n};\n\nexport default useNavigateToHome;"],"names":["Products","dispatch","useDispatch","navigate","useNavigate","products","useSelector","state","makeup","loading","favorites","error","currentPage","productsPerPage","currentPageFavorites","setCurrentPageFavorites","useState","searchQuery","setSearchQuery","filter","setFilter","isLoaded","useEffect","storedProducts","localStorage","getItem","setMakeupProducts","JSON","parse","fetchMakeupProducts","filteredProducts","product","name","toLowerCase","includes","favoriteProducts","id","indexOfLastProductAll","indexOfFirstProductAll","currentProductsAll","slice","indexOfLastProductFav","indexOfFirstProductFav","currentProductsFavorites","paginateAll","pageNumber","setCurrentPage","paginateFavorites","handleFilterChange","newFilter","handleToHome","useNavigateToHome","_jsxs","children","_jsx","onClick","role","style","cursor","margin","CircularProgress","_Fragment","console","log","TextField","label","value","onChange","event","target","sx","Button","variant","m","Grid","container","spacing","map","size","xs","sm","md","Card","handleViewDetails","maxWidth","minHeight","maxHeight","display","flexDirection","justifyContent","width","height","overflow","src","image_link","alt","objectFit","onError","e","currentTarget","CardContent","flexGrow","Tooltip","title","arrow","Typography","textOverflow","whiteSpace","color","brand","price","product_type","marginTop","IconButton","stopPropagation","toggleFavorite","FavoriteIcon","FavoriteBorderIcon","removeProduct","DeleteIcon","disabled","Math","ceil","length"],"sourceRoot":""}