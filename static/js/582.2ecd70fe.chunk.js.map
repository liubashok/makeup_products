{"version":3,"file":"static/js/582.2ecd70fe.chunk.js","mappings":"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","sources":["pages/CreateProduct.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Typography } from '@mui/material';\nimport Grid from '@mui/material/Grid2';\nimport { addProduct } from '../redux/makeupSlice';\nimport { RootState } from '../redux/store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst CreateProduct = () => {\n  const dispatch = useDispatch();\n  const products = useSelector((state: RootState) => state.makeup.products);\n  const existingIds = products.map((product) => product.id);\n  const [name, setName] = useState('');\n  const [brand, setBrand] = useState('');\n  const [price, setPrice] = useState('');\n  const [product_type, setProductType] = useState('');\n  const [image_link, setImageLink] = useState('');\n  const [category, setCategory] = useState('');\n  const [description, setDescription] = useState('');\n\n  const generateUniqueId = (existingIds: number[]): number => {\n    let newId = Date.now();\n  \n    while (existingIds.includes(newId)) {\n      newId = Date.now() + Math.floor(Math.random() * 1000);\n    }\n  \n    return newId;\n  };\n\n  const handleImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      const imageUrl = URL.createObjectURL(file);\n      setImageLink(imageUrl);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const id = generateUniqueId(existingIds);\n    dispatch(addProduct({ id, name, brand, price, image_link, product_type, category, description }));\n\n    setName('');\n    setBrand('');\n    setPrice('');\n    setProductType('');\n    setImageLink('');\n    setCategory('');\n    setDescription('');\n  };\n\n  return (\n    <div style={{ margin: '20px 100px'}}>\n      <Typography variant=\"h4\" sx={{ marginBottom: 2 }}>Create New Product</Typography>\n      <form onSubmit={handleSubmit}>\n        <Grid container spacing={2}>\n          <Grid size={{xs: 12}}>\n            <TextField\n              fullWidth\n              label=\"Product Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n            />\n          </Grid>\n          <Grid size={{xs: 12}}>\n            <TextField\n              fullWidth\n              label=\"Brand\"\n              value={brand}\n              onChange={(e) => setBrand(e.target.value)}\n              required\n            />\n          </Grid>\n          <Grid size={{xs: 12}}>\n            <TextField\n              fullWidth\n              label=\"Price\"\n              value={price}\n              onChange={(e) => setPrice(e.target.value)}\n              required\n            />\n          </Grid>\n          <Grid size={{xs: 12}}>\n            <TextField\n              fullWidth\n              label=\"Product Type\"\n              value={product_type}\n              onChange={(e) => setProductType(e.target.value)}\n              required\n            />\n          </Grid>\n          <Grid size={{xs: 12}}>\n            <TextField\n              fullWidth\n              label=\"Description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n            />\n          </Grid>\n          <Grid size={{xs: 12}}>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleImageChange}\n            />\n            {image_link && <img src={image_link} alt=\"Preview\" style={{ width: '100px', height: 'auto', marginTop: '10px' }} />} {/* Предпросмотр изображения */}\n          </Grid>\n          <Grid size={{xs: 12}}>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" sx={{ marginRight: 2 }}>\n              Create Product\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/products\">\n          Back to Products\n        </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateProduct;"],"names":["CreateProduct","dispatch","useDispatch","existingIds","useSelector","state","makeup","products","map","product","id","name","setName","useState","brand","setBrand","price","setPrice","product_type","setProductType","image_link","setImageLink","category","setCategory","description","setDescription","_jsxs","style","margin","children","_jsx","Typography","variant","sx","marginBottom","onSubmit","event","preventDefault","newId","Date","now","includes","Math","floor","random","generateUniqueId","addProduct","Grid","container","spacing","size","xs","TextField","fullWidth","label","value","onChange","e","target","required","type","accept","_event$target$files","file","files","imageUrl","URL","createObjectURL","src","alt","width","height","marginTop","Button","color","marginRight","component","Link","to"],"sourceRoot":""}