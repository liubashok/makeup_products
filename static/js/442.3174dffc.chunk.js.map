{"version":3,"file":"static/js/442.3174dffc.chunk.js","mappings":"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","sources":["pages/ProductDetails.tsx","hooks/useNavigateToHome.ts"],"sourcesContent":["import { useParams, Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../redux/store';\nimport { Typography, Button, TextField } from '@mui/material';\nimport Grid from '@mui/material/Grid2'\nimport useNavigateToHome from '../hooks/useNavigateToHome';\nimport { useState } from 'react';\nimport { updateProduct, MakeupProduct } from '../redux/makeupSlice';\n\nconst ProductDetails = () => {\n  const { id } = useParams<{ id: string }>();\n  const products = useSelector((state: RootState) => state.makeup.products); \n  const product = products.find((product) => product.id === Number(id));\n  const handleToHome = useNavigateToHome();\n  const dispatch = useDispatch();\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedProduct, setEditedProduct] = useState<MakeupProduct | undefined>(product);\n\n  if (!product) {\n    return <Typography variant=\"h6\">Product not found</Typography>;\n  }\n\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n\n  const handleSaveClick = () => {\n    if (editedProduct) {\n      dispatch(updateProduct(editedProduct));\n      setIsEditing(false);\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setEditedProduct((prevProduct) => ({\n      ...prevProduct!,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <Grid container sx={{ width: '100%', maxWidth: 1300, margin: '0 50px' }}>\n        <Grid size={{xs: 12, sm: 8, md: 6}}>\n       <h1 onClick={handleToHome}\n      role=\"button\" \n      style={{ cursor: 'pointer' }}\n       >Makeup Products</h1> \n      <img\n          src={product.image_link || '/no-products-found.png'}\n          alt={product.name}\n          style={{ width: '80%', maxHeight: '600px', objectFit: 'cover' }}\n          onError={(e) => (e.currentTarget.src = '/no-products-found.png')}\n      />\n      </Grid>\n      <Grid size={{xs: 12, sm: 8, md: 6}} sx={{ marginTop: 10 }}>\n      {isEditing ? (\n          <>\n            <TextField\n              label=\"Name\"\n              name=\"name\"\n              value={editedProduct?.name || ''}\n              onChange={handleChange}\n              fullWidth\n              margin=\"normal\"\n            />\n            <TextField\n              label=\"Brand\"\n              name=\"brand\"\n              value={editedProduct?.brand || ''}\n              onChange={handleChange}\n              fullWidth\n              margin=\"normal\"\n            />\n            <TextField\n              label=\"Price\"\n              name=\"price\"\n              value={editedProduct?.price || ''}\n              onChange={handleChange}\n              fullWidth\n              margin=\"normal\"\n            />\n            <TextField\n              label=\"Product Type\"\n              name=\"product_type\"\n              value={editedProduct?.product_type || ''}\n              onChange={handleChange}\n              fullWidth\n              margin=\"normal\"\n            />\n            <TextField\n              label=\"Description\"\n              name=\"description\"\n              value={editedProduct?.description || ''}\n              onChange={handleChange}\n              fullWidth\n              margin=\"normal\"\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSaveClick}\n              sx={{ marginTop: 5, marginBottom: 3 }}\n            >\n              Save\n            </Button>\n          </>\n        ) : (\n          <>\n          <Typography variant=\"h5\">{product.name}</Typography>\n          <Typography variant=\"body1\">{product.brand}</Typography>\n          <Typography variant=\"h6\">${product.price}</Typography>\n          <Typography variant=\"body2\" sx={{ marginBottom: 2 }}>{product.product_type}</Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n              {product.description}\n            </Typography>\n        <Button variant=\"contained\" \n        color=\"primary\" \n        component={Link} \n        to=\"/products\" \n        sx={{ marginTop: 5, marginBottom: 3, marginRight: 2 }}>\n          Back to Products\n        </Button>\n        <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={handleEditClick}\n              sx={{ marginTop: 5, marginBottom: 3 }}\n            >\n              Edit Product\n            </Button>\n        </>\n        )}\n      </Grid>\n      </Grid>\n  );\n};\n\nexport default ProductDetails;","import { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { setCurrentPage } from '../redux/makeupSlice';\n\nconst useNavigateToHome = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleToHome = () => {\n    dispatch(setCurrentPage(1));\n    navigate('/products');\n  };\n\n  return handleToHome;\n};\n\nexport default useNavigateToHome;"],"names":["ProductDetails","id","useParams","product","useSelector","state","makeup","products","find","Number","handleToHome","useNavigateToHome","dispatch","useDispatch","isEditing","setIsEditing","useState","editedProduct","setEditedProduct","_jsx","Typography","variant","children","handleChange","e","name","value","target","prevProduct","_jsxs","Grid","container","sx","width","maxWidth","margin","size","xs","sm","md","onClick","role","style","cursor","src","image_link","alt","maxHeight","objectFit","onError","currentTarget","marginTop","_Fragment","TextField","label","onChange","fullWidth","brand","price","product_type","description","Button","color","handleSaveClick","updateProduct","marginBottom","component","Link","to","marginRight","handleEditClick","navigate","useNavigate","setCurrentPage"],"sourceRoot":""}